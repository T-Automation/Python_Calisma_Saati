# mod islemi kalani verir
>>> 10 % 5
0
>>> 10 % 3
1

# // islemi tam bolen sayisini verir
>>> 10 // 3
3

#liste tanimlama
>>> a = [1,2,3,4,5]
>>> a
[1, 2, 3, 4, 5]
>>> type(a)
<class 'list'>
>>> [1,1.2,'asd',[1,2],{'key':3},]
[1, 1.2, 'asd', [1, 2], {'key': 3}]
>>> a = list()
>>> a
[]
>>> a = []
>>> a = [1,2,3,4]
>>> a
[1, 2, 3, 4]

#str uzerinde liste islemleri
>>> 'bu bir stringdir'
'bu bir stringdir'
>>> stri = 'bu bir stringdir'
>>> type(stri)
<class 'str'>
>>> stri[0]
'b'
>>> stri[1]
'u'

#liste kopyalama
>>> a = [1,2,3]
>>> b = a
>>> b[0]= 'asdas'
>>> b
['asdas', 2, 3]
>>> a
['asdas', 2, 3]
>>> a= [1,2,3]
>>> b = a.copy()
>>> b
[1, 2, 3]
>>> a
[1, 2, 3]
>>> b[0] = 'asdfasd'
>>> b
['asdfasd', 2, 3]
>>> a
[1, 2, 3]

#listeye eleman ekleme
>>> a= [3] = 4
  File "<input>", line 1
SyntaxError: cannot assign to literal
>>> a
[1, 2, 3]
>>> a.append(4)
>>> a
[1, 2, 3, 4]
>>> a.append(10)
>>> a
[1, 2, 3, 4, 10]
>>> a.append('asdf')
>>> a
[1, 2, 3, 4, 10, 'asdf']

#liste ozel fonksiyonu sort
>>> a = [5,4,2,8,1]
>>> a.sort()
>>> a
[1, 2, 4, 5, 8]
>>> a
[1, 2, 4, 5, 8]

#liste ozel fonksiyonu remove
>>> a.remove(2)
>>> a
[1, 4, 5, 8]
>>> a = [1,2,3,4,5,2,2]
>>> a.remove(2)
>>> a
[1, 3, 4, 5, 2, 2]

#liste ozel fonksiyonu index
>>> a.index(4)
2

#liste ozel fonksiyonu pop
>>> a.pop()
2
>>> a
[1, 3, 4, 5, 2]
>>> a.pop()
2
>>> a
[1, 3, 4, 5]

#liste ozel fonksiyonu reverse
>>> a.reverse()
>>> a
[5, 4, 3, 1]

#listenin belirli bir araligini alma
>>> a=[1,2,3,4,5,6,7,8,9,10]
>>> a[0:3]
[1, 2, 3]
>>> a[0:]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
>>> a[:8]
[1, 2, 3, 4, 5, 6, 7, 8]
>>> a[-1]
10
>>> a[-2]
9
>>> a[-2:]
[9, 10]
>>> a[-9:2]
[2]
>>> a[-10:2]
[1, 2]
>>> a
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
>>> a[7:4]
[]
>>> a[7:4:-1]
[8, 7, 6]
>>> a[:]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
>>> a[::-1]
[10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
>>> a
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
>>> a[2:8]
[3, 4, 5, 6, 7, 8]
>>> a[7:4]
[]
>>> a[7:4:-2]
[8, 6]
>>> a[7:4:-1]
[8, 7, 6]
>>> a
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# for kullanimi
>>> for index in a:
...     print(index)
...     
1
2
3
4
5
6
7
8
9
10
>>> for index in a:
...     print(index, end='-')
...     
...     
1-2-3-4-5-6-7-8-9-10-

# range fonksiyonu
>>> for i in range(20):
...     print(i)
...     
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
>>> for i in range(5): print(i)
... 
0
1
2
3
4
>>> for i in range(90,100,2):
...     print(i)
...     
90
92
94
96
98
>>> for i in range(90,100,2):
...     print(i, end='-', sep=' ')
...     
90-92-94-96-98-

#print sep degiskeni
>>> print(3,4,5,6, sep='-')
3-4-5-6
#stringlerde split metodu
>>> '1.1.1.1/24'.split('/')
['1.1.1.1', '24']
>>> '1.1.1.1/24/sda'.split('/')
['1.1.1.1', '24', 'sda']
